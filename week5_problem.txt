<!---The academic office at the Hogwarts School of Witchcraft and Wizardry has compiled data about students' grades. The data is provided as text from standard input in three parts: information about courses, information about students and information about grades. Each part has a specific line format, described below..

Information about courses
Line format: Course Code~Course Name~Semester~Year~Instructor
Information about students
Line format: Roll Number~Full Name
Information about grades
Line format: Course Code~Semester~Year~Roll Number~Grade
The possible grades are A, AB, B, BC, C, CD, D with corresponding grade points 10, 9, 8, 7, 6, 5 and 4. The grade point average of a student is the sum of his/her grade points divided by the number of courses. For instance, if a student has taken two courses with grades A and C, the grade point average is 8.50 = (10+7)รท2. If a student has not completed any courses, the grade point average is defined to be 0.

You may assume that the data is internally consistent. For every grade, there is a corresponding course code and roll number in the input data.

Each section of the input starts with a line containing a single keyword. The first section begins with a line containing Courses. The second section begins with a line containing Students. The third section begins with a line containing Grades. The end of the input is marked by a line containing EndOfInput.

Write a Python program to read the data as described above and print out a line listing the grade point average for each student in the following format:

Roll Number~Full Name~Grade Point Average
Your output should be sorted by Roll Number. The grade point average should be rounded off to 2 digits after the decimal point. Use the built-in function round().

Here is a sample input and its corresponding output.

Sample Input

Courses
TRAN~Transfiguration~1~2011-2012~Minerva McGonagall
CHAR~Charms~1~2011-2012~Filius Flitwick
Students
SLY2301~Hannah Abbott
SLY2302~Euan Abercrombie
SLY2303~Stewart Ackerley
SLY2304~Bertram Aubrey
SLY2305~Avery
SLY2306~Malcolm Baddock
SLY2307~Marcus Belby
SLY2308~Katie Bell
SLY2309~Sirius Orion Black
Grades
TRAN~1~2011-2012~SLY2301~AB
TRAN~1~2011-2012~SLY2302~B
TRAN~1~2011-2012~SLY2303~B
TRAN~1~2011-2012~SLY2305~A
TRAN~1~2011-2012~SLY2306~BC
TRAN~1~2011-2012~SLY2308~A
TRAN~1~2011-2012~SLY2309~AB
CHAR~1~2011-2012~SLY2301~A
CHAR~1~2011-2012~SLY2302~BC
CHAR~1~2011-2012~SLY2303~B
CHAR~1~2011-2012~SLY2305~BC
CHAR~1~2011-2012~SLY2306~C
CHAR~1~2011-2012~SLY2307~B
CHAR~1~2011-2012~SLY2308~AB
EndOfInput

Sample Output

SLY2301~Hannah Abbott~9.5
SLY2302~Euan Abercrombie~7.5
SLY2303~Stewart Ackerley~8.0
SLY2304~Bertram Aubrey~0
SLY2305~Avery~8.5
SLY2306~Malcolm Baddock~6.5
SLY2307~Marcus Belby~8.0
SLY2308~Katie Bell~9.5
SLY2309~Sirius Orion Black~9.0
--->






# Define a dictionary to store the courses' grade point values

grade_points={"A": 10, "AB": 9, "B": 8, "BC": 7, "C": 6, "CD": 5, "D": 4}

# Define dictionaries to store student names and their total grade points and course count


student_names={}
student_grade_points={}
student_course_counts={}

# Read and process the input data




section=None                                     # Variable to keep track of the current section (Courses, Students, Grades)
while True:
    line=input().strip()
    if line=="Courses":
        section="Courses"
    elif line=="Students":
        section="Students"
    elif line=="Grades":
        section="Grades"
    elif line=="EndOfInput":
        break
    else:
        if section=="Courses":
            course_code, _, _, _, _ = line.split("~")
        elif section=="Students":
            roll_number,full_name=line.split("~")
            student_names[roll_number]=full_name
        elif section=="Grades":
            course_code, _, _, roll_number, grade=line.split("~")
            grade_point = grade_points.get(grade,0)
            student_grade_points.setdefault(roll_number,0)
            student_grade_points[roll_number]+=grade_point
            student_course_counts.setdefault(roll_number, 0)
            student_course_counts[roll_number]+=1

# Calculate and print the grade point averages for each student



for roll_number in sorted(student_names.keys()):
    full_name=student_names[roll_number]
    total_grade_points=student_grade_points.get(roll_number, 0)
    course_count=student_course_counts.get(roll_number, 0)
    if course_count>0:
        average = total_grade_points/course_count
    else:
        average=0
    print(f"{roll_number}~{full_name}~{round(average, 2)}")
